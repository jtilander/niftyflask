
#
# This brings up a reverse proxy frontend that can be used for
# https endpoint as well as hiding many other services.
# 
proxy:
  image: jwilder/nginx-proxy:0.4.0
  restart: never
  volumes:
    - /var/run/docker.sock:/tmp/docker.sock:ro
  ports:
    - 80:80
    - 443:443
  log_opt:
    max-size: "10m"
    max-file: "2"

#
# This is the frontend
#
frontend:
  build: .
  hostname: ${NIFTYHOSTNAME}
  restart: never
  environment:
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_USER=postgres
    - VIRTUAL_HOST=${NIFTYHOSTNAME}
  links:
    - postgres
  volumes_from:
    - app
  log_opt:
    max-size: "10m"
    max-file: "2"

app:
  build: app
  restart: never
  environment:
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_USER=postgres
    - VIRTUAL_HOST=${NIFTYHOSTNAME}
  # volumes:
  #   - ./app:/app
  log_opt:
    max-size: "10m"
    max-file: "2"

#
# Here is the backend storage for the application.
#
postgres:
  build: db
  hostname: postgres
  restart: never
  environment:
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_USER=postgres
    - POSTGRES_DB=postgres
    - PGDATA=/var/lib/postgresql/data/pgdata
  volumes:
    - /mnt/datavolumes/niftyflask/db:/var/lib/postgresql/data/pgdata
  log_opt:
    max-size: "10m"
    max-file: "2"
